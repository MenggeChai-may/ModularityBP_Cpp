mod: Message Passing for Modularity

Author: Pan Zhang ( panzhang@itp.ac.cn or july.lzu@gmail.com)
Companion paper: "Scalable detection of statistically significant communities and hierarchies: message-passing for modularity" by Pan Zhang and Cristopher Moore
Link to the paper: http://www.pnas.org/content/early/2014/12/04/1409770111.abstract

Version 1.1
Release time 18/03/2014
-----------------------------------------------------------------------------------------
Modification history
05/21/2015: A bug may cause "seems a problem occurred" is fixed.
05/21/2015: Partition at each level of dendrogram can be extracted out.
05/21/2015: Full information about dendrogram can be output.

-----------------------------------------------------------------------------------------
Function:
1-) Find retrieval state from Botltzmann distribution with Modularity as Hamiltonian. 
2-) Determine number of groups by maximizing retrieval modularity.
3-) Hierarchical clustering
4-) Detected partitions at each
	level of dendogram, as well as information about the whole dendrogram can be written 
	into a data file using --confi option.
========================================================================================
Compiling:
Simply use 'make' inside 'src' dir.
Compiling and running has been tested under g++ version 4.4 and 4.2 (Gentoo 2.2 and OS X mavericks)

-----------------------------------------------------------------------------------------
Running examples:
Some network files are in folder "networks/"

1.) Modular detection on "network of Zakary's Karate club", file karate.gml, 
using two groups (q=2). The obtained partition will be recorded into "result.dat".
The partition is the list of label for each node, labeling starts from 0:
	mod retrieval -l karate.gml -q2 --confi result.dat

2.) Select number of groups on "network of political books", file polbooks.gml,
and record the result into result.dat:
	mod select -l polbooks.gml -D1 --confi result.dat

3.) Select number of groups on network generated by Stochastic Block Model with 
q*=4 groups, q4sbm.gml, and record result into result.dat:
	mod select -l q4sbm.gml --confi result.dat


4.) Find hierarchical structure of network file polblogs.gml, and write the final 
devision (bottom level in the dendrogram) into result.dat.
	mod hiera -l polblogs.gml --confi result.dat
	Output are number of nodes in subgroups of dendogram.
	If "*" is displayed, it means the subgraph has no internal structure, acts like a random graph.

	If "(x)" is displayed, with x denoting a number, it means the subgraph will be divided into 
	x sub-sub-groups in the next level of dendogram.

5.) Modular detection on network q2sbm.gml, using specified beta value 1.5, with verbose 2:
	mod infer -l q2sbm.gml -q2 -b 1.5 -v2

use "./mod -h" for more information of parameters that the program accepts.

Note that different seeds of random number generator could give slightly different result.
========================================================================================
The lastest version of this program is at http://panzhang.net

